// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using TimeSheet_Backend.Models.Data;

#nullable disable

namespace TimeSheet_Backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230529144307_DbCreated")]
    partial class DbCreated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TimeSheetBackend.Models.Data.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Street of the Unknown Hero 12",
                            City = "Belgrade",
                            Country = "Serbia",
                            Email = "official@vixtra.com",
                            Name = "Vixtra Corporation"
                        });
                });

            modelBuilder.Entity("TimeSheetBackend.Models.Data.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompanyID = 1,
                            Name = "Finances"
                        },
                        new
                        {
                            ID = 2,
                            CompanyID = 1,
                            Name = "Manufactoring"
                        });
                });

            modelBuilder.Entity("TimeSheetBackend.Models.Data.Employee", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HourlyRate")
                        .HasColumnType("float");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartOfEmployment")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = "0912986710077",
                            Address = "Dusana Baranina 1/C/10, Bijeljina",
                            CompanyID = 1,
                            DateOfBirth = new DateTime(1986, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Bachelor of Information Technologies",
                            DepartmentID = 1,
                            Email = "aleksbn@gmail.com",
                            FirstName = "Aleksandar",
                            HourlyRate = 12.0,
                            JobTitle = "Director of Finances",
                            LastName = "Matic",
                            Phone = "+38765123789",
                            StartOfEmployment = new DateTime(2012, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = "0712992512497",
                            Address = "Nemanjina 110, Belgrade",
                            CompanyID = 1,
                            DateOfBirth = new DateTime(1992, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Graduated Economist",
                            DepartmentID = 1,
                            Email = "ivrank@gmail.com",
                            FirstName = "Ivana",
                            HourlyRate = 8.0,
                            JobTitle = "Commercialist",
                            LastName = "Rankovic",
                            Phone = "+38160124578",
                            StartOfEmployment = new DateTime(2019, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = "0505991963258",
                            Address = "Ive Andrica 25, Belgrade",
                            CompanyID = 1,
                            DateOfBirth = new DateTime(1991, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Master of Economy",
                            DepartmentID = 1,
                            Email = "jasnaiv@gmail.com",
                            FirstName = "Jasna",
                            HourlyRate = 7.0,
                            JobTitle = "Accounty",
                            LastName = "Ivkovic",
                            Phone = "+38166419526",
                            StartOfEmployment = new DateTime(2017, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = "2210986124578",
                            Address = "Kirila i Metodija 29, Belgrade",
                            CompanyID = 1,
                            DateOfBirth = new DateTime(1986, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Master of Information Technologies",
                            DepartmentID = 2,
                            Email = "mirko@gmail.com",
                            FirstName = "Mirko",
                            HourlyRate = 12.0,
                            JobTitle = "Team Leader",
                            LastName = "Simanic",
                            Phone = "+38765142369",
                            StartOfEmployment = new DateTime(2013, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = "0207987124935",
                            Address = "Janka Veselinovica 20, Belgrade",
                            CompanyID = 1,
                            DateOfBirth = new DateTime(1987, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Bachelor of Information Technologies",
                            DepartmentID = 2,
                            Email = "covla@gmail.com",
                            FirstName = "Goran",
                            HourlyRate = 10.0,
                            JobTitle = "QoS assurance manager",
                            LastName = "Vlacic",
                            Phone = "+381621549302",
                            StartOfEmployment = new DateTime(2020, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = "0811993988659",
                            Address = "Laye Kostica 182, Belgrade",
                            CompanyID = 1,
                            DateOfBirth = new DateTime(1993, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degree = "Bachelor of Organisational Sciences",
                            DepartmentID = 2,
                            Email = "makigavra@gmail.com",
                            FirstName = "Marija",
                            HourlyRate = 10.0,
                            JobTitle = "Software Developer",
                            LastName = "Gavranovic",
                            Phone = "+381645123698",
                            StartOfEmployment = new DateTime(2013, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TimeSheetBackend.Models.Data.WorkingTime", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("WorkingTimes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Date = new DateTime(2023, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0912986710077",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 2,
                            Date = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0912986710077",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 3,
                            Date = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0912986710077",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 4,
                            Date = new DateTime(2023, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0912986710077",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 5,
                            Date = new DateTime(2023, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0912986710077",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 6,
                            Date = new DateTime(2023, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0712992512497",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 7,
                            Date = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0712992512497",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 8,
                            Date = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0712992512497",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 9,
                            Date = new DateTime(2023, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0712992512497",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 10,
                            Date = new DateTime(2023, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0712992512497",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 11,
                            Date = new DateTime(2023, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0505991963258",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 12,
                            Date = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0505991963258",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 13,
                            Date = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0505991963258",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 14,
                            Date = new DateTime(2023, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0505991963258",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 15,
                            Date = new DateTime(2023, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0505991963258",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 16,
                            Date = new DateTime(2023, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "2210986124578",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 17,
                            Date = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "2210986124578",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 18,
                            Date = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "2210986124578",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 19,
                            Date = new DateTime(2023, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "2210986124578",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 20,
                            Date = new DateTime(2023, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "2210986124578",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 21,
                            Date = new DateTime(2023, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0207987124935",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 22,
                            Date = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0207987124935",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 23,
                            Date = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0207987124935",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 24,
                            Date = new DateTime(2023, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0207987124935",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 25,
                            Date = new DateTime(2023, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0207987124935",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 26,
                            Date = new DateTime(2023, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0811993988659",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 27,
                            Date = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0811993988659",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 28,
                            Date = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0811993988659",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 29,
                            Date = new DateTime(2023, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0811993988659",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ID = 30,
                            Date = new DateTime(2023, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeID = "0811993988659",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("TimeSheetBackend.Models.Data.Department", b =>
                {
                    b.HasOne("TimeSheetBackend.Models.Data.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("TimeSheetBackend.Models.Data.Employee", b =>
                {
                    b.HasOne("TimeSheetBackend.Models.Data.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeSheetBackend.Models.Data.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TimeSheetBackend.Models.Data.WorkingTime", b =>
                {
                    b.HasOne("TimeSheetBackend.Models.Data.Employee", "Employee")
                        .WithMany("WorkingTimes")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TimeSheetBackend.Models.Data.Company", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("TimeSheetBackend.Models.Data.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("TimeSheetBackend.Models.Data.Employee", b =>
                {
                    b.Navigation("WorkingTimes");
                });
#pragma warning restore 612, 618
        }
    }
}
